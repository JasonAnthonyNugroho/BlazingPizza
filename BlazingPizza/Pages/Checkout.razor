@page "/checkout"
@inject BlazingPizza.Services.OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
    <EditForm EditContext=editContext OnValidSubmit=PlaceOrder>
    <div class="checkout-cols">
        <div class="checkout-order-details">
            <h4>Review order</h4>
            <OrderReview Order="Order" />
        </div>

        <div class="checkout-delivery-address">
            <h4>Deliver to...</h4>
                @if (isError)
                {
                    <div class="alert alert-danger">Please enter a name and address.</div>
                }
            <AddressEditor Address="Order.DeliveryAddress" />
        </div>
    </div>

        <button class="checkout-button btn btn-warning" type="Submit" disabled=@isError>
        Place order
        </button>
        
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    Order Order => OrderState.Order;
    bool isError = false;
    bool isSubmitting;
    private EditContext editContext;
    async Task PlaceOrder()
    {
        isError = false;
        isSubmitting = true;
        var response = await HttpClient.PostAsJsonAsync(
            $"{NavigationManager.BaseUri}orders", OrderState.Order);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }
    protected void ShowError()
    {
        isError = true;
    }
    
}